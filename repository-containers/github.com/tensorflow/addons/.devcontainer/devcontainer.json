{
	"name": "Tensorflow Addons SIG Dev Container",

	// Uncomment this for GPU image
	// "build": { 
	//		"args": { 
	//			"IMAGE_TYPE": "latest"
	//		} 
	//},

	"dockerFile": "Dockerfile",
	
	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": null,
		"python.formatting.provider": "black",
		"python.linting.flake8Enabled": true,
		// Before you uncomment python.testing.* check if these bugs are resolved
		// https://github.com/microsoft/vscode-python/issues/8678
		// https://github.com/microsoft/vscode-python/issues/9553
		// "python.testing.pytestEnabled": true,
		// "python.testing.pytestArgs": ["./tensorflow_addons"],
		"C_Cpp.clang_format_style": "{BasedOnStyle: Google}",
		"C_Cpp.default.includePath": [
			"${workspaceFolder}/**",
			"/usr/local/lib/python3.6/dist-packages/tensorflow/include/"
        	],
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
	// Before you enable bazel integration check https://github.com/bazelbuild/bazel/issues/10226
	//"BazelBuild.vscode-bazel",
        "ms-python.python",
        "ms-vscode.cpptools"
    	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Uncomment to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [ 
		// Uncomment to enable Nvidia support
		// "--runtime=nvidia"],
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined" 
	],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
